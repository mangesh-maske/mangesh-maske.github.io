{"version":3,"sources":["components/Header.js","components/Result.js","components/Results.js","components/SearchFile.js","components/Footer.js","components/Record.js","components/AllRecords.js","components/Loader.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","location","useLocation","className","pathname","to","Result","props","result","docName","xmlns","width","height","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","fileName","pageNo","Results","results","map","key","id","allRecords","SearchFile","useState","text","setText","onSubmit","e","preventDefault","onSearch","alert","type","placeholder","value","onChange","target","Footer","Record","record","charAt","AllRecords","records","setRecords","useEffect","a","fetchRecords","recordsFromServer","data","getRecords","fetch","res","json","length","Loader","App","setResults","keyword","setKeyword","loader","setLoader","findDoc","filter","toLowerCase","path","exact","render","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9ae30f9c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {FaArrowRight, FaArrowLeft} from 'react-icons/fa';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\nconst Header = () => {\r\n    const location = useLocation();\r\n    return (\r\n        <header className='header'>\r\n            <h1>File Finder</h1>\r\n            {location.pathname === '/' && <Link to='/allRecords'>See All Records <FaArrowRight /></Link>}\r\n            {location.pathname === '/allRecords' && <Link to='/'><FaArrowLeft /> Back To Search</Link>}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Result = (props) => {\r\n    return (\r\n        <div className=\"result-card\">\r\n            <h3 className=\"title\">{props.result.docName}</h3>\r\n            <div className=\"fileInfo\">\r\n                <div className=\"fileName d-flex justify-content-start\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"46\" height=\"46\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#2c3e50\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                        <path d=\"M14 3v4a1 1 0 0 0 1 1h4\" />\r\n                        <path d=\"M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z\" />\r\n                        <line x1=\"9\" y1=\"9\" x2=\"10\" y2=\"9\" />\r\n                        <line x1=\"9\" y1=\"13\" x2=\"15\" y2=\"13\" />\r\n                        <line x1=\"9\" y1=\"17\" x2=\"15\" y2=\"17\" />\r\n                    </svg>\r\n                    <div>\r\n                        <p className=\"label\">File Name</p>\r\n                        <h4>{props.result.fileName}</h4>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"pageNo d-flex justify-content-start\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"46\" height=\"46\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#2c3e50\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                        <path d=\"M10 12h-1v5h1\" />\r\n                        <path d=\"M14 12h1v5h-1\" />\r\n                        <path d=\"M14 3v4a1 1 0 0 0 1 1h4\" />\r\n                        <path d=\"M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z\" />\r\n                    </svg>\r\n                    <div>\r\n                        <p className=\"label\">Page No.</p>\r\n                        <h4>{props.result.pageNo}</h4>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result\r\n","import React from 'react';\r\nimport Result from './Result';\r\n\r\nconst Results = (props) => {\r\n    return (\r\n        <div>\r\n            {props.results.map((result) => (<Result key={result.id} result={result} allRecords={props.allRecords} />) )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results\r\n","import React from 'react'\r\nimport {useState} from 'react';\r\n\r\nconst SearchFile = (props) => {\r\n    const [text, setText] = useState('');\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(!text){\r\n            alert('Please enter keyword');\r\n            return\r\n        }\r\n\r\n        props.onSearch(text);\r\n\r\n        setText('');\r\n        \r\n    }\r\n    \r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Search Document</label>\r\n                <input type='text' placeholder='Enter Narsary Name' value={text} onChange={(e) => setText(e.target.value)} />            \r\n            </div>\r\n\r\n            <input type='submit' value='Search' className='btn btn-block' /> \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchFile\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Record = (props) => {\r\n    return (\r\n        <div className=\"record d-flex justify-content-start align-items-center\">\r\n            <div className=\"initial\">\r\n                {props.record.docName.charAt(0)}\r\n            </div>\r\n            <div className=\"docName\">\r\n                <p>{props.record.docName}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Record\r\n","import React from 'react'\r\nimport {useState,useEffect} from 'react';\r\nimport Record from './Record';\r\n// import * as data from './db.json';\r\n\r\nconst AllRecords = () => {\r\n    const [records, setRecords] = useState([]);\r\n    useEffect(() => {\r\n        const getRecords = async () => {\r\n          const recordsFromServer = await fetchRecords();\r\n          setRecords(recordsFromServer.data);\r\n        }\r\n    \r\n        getRecords();\r\n      },[])\r\n    \r\n    \r\n       // fetch all records\r\n    const fetchRecords = async () => {\r\n        const res = await fetch('https://script.google.com/macros/s/AKfycbzGwyZyWfuwRD8FcSWmCtfS3xdDgUq0kmsk9RK8UkQdz5NTB3II/exec');\r\n        const data = await res.json();\r\n        return data;\r\n    } \r\n\r\n    return (\r\n        <div className=\"all-records-container\">\r\n            <h3 className=\"title\">All Records</h3>\r\n            { records.length > 0 ? records.map((record) => (<Record key={record.id} record={record} />) ) : <p>No Record Found</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllRecords\r\n","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\"><p className=\"blink_me\">Loading ...</p></div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react';\nimport {useState,useEffect} from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header';\nimport Results from './components/Results';\nimport SearchFile from './components/SearchFile';\nimport Footer from './components/Footer';\n// import * as data from './components/db.json';\nimport AllRecords from './components/AllRecords';\nimport Loader from './components/Loader';\n\n\nconst App = () =>{\n  const [results, setResults] = useState([]);\n  const [keyword, setKeyword] = useState('');\n  const [records, setRecords] = useState([]);\n  const [loader, setLoader] = useState(false);\n  useEffect(() => {\n      const getRecords = async () => {\n        const recordsFromServer = await fetchRecords();\n        setRecords(recordsFromServer.data);\n        setLoader(true);\n      }\n  \n      getRecords();\n    },[])\n\n    // fetch all records\n    const fetchRecords = async () => {\n      const res = await fetch('https://script.google.com/macros/s/AKfycbzGwyZyWfuwRD8FcSWmCtfS3xdDgUq0kmsk9RK8UkQdz5NTB3II/exec');\n      const data = await res.json()\n      return data;\n    }    \n  \n  \n  // search doc\n  const findDoc = async (keyword) => {\n    setKeyword(keyword);\n    const data = records.filter((record) => record.keyword === keyword.toLowerCase() );\n    setResults(data);\n  }\n\n  return (\n    <Router>\n    <div className=\"container\">\n        <Header />\n        <Route path='/' exact render={(props) => (\n          <>\n            <SearchFile onSearch={findDoc} />\n            {results.length > 0 ? <Results results={results} /> : keyword && <p>Sorry, No Record Found for <b>{keyword}</b></p>}  \n          </>\n        )} />\n        <Route path='/allRecords' component={AllRecords} /> \n        <Footer />\n        {loader === false && <Loader />}  \n    </div>\n    </Router>\n  )\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}